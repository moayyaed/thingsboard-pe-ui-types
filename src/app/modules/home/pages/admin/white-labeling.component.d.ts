import { OnDestroy, OnInit } from '@angular/core';
import { Store } from '@ngrx/store';
import { AppState } from '@core/core.state';
import { PageComponent } from '@shared/components/page.component';
import { ActivatedRoute } from '@angular/router';
import { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';
import { HasConfirmForm } from '@core/guards/confirm-on-exit.guard';
import { UserPermissionsService } from '@core/http/user-permissions.service';
import { WhiteLabelingService } from '@core/http/white-labeling.service';
import { Observable } from 'rxjs';
import { MatDialog } from '@angular/material/dialog';
import { UiSettingsService } from '@core/http/ui-settings.service';
import * as i0 from "@angular/core";
export declare class WhiteLabelingComponent extends PageComponent implements OnInit, OnDestroy, HasConfirmForm {
    protected store: Store<AppState>;
    private route;
    private userPermissionsService;
    private whiteLabelingService;
    private uiSettingsService;
    private dialog;
    fb: UntypedFormBuilder;
    private window;
    wlSettings: UntypedFormGroup;
    private whiteLabelingParams;
    isSysAdmin: boolean;
    isTenant: boolean;
    readonly: boolean;
    isLoginWl: boolean;
    uiHelpBaseUrlPlaceholder$: Observable<string>;
    thingsboardVersion: any;
    showPosition: {
        name: string;
        value: boolean;
    }[];
    private destroy$;
    constructor(store: Store<AppState>, route: ActivatedRoute, userPermissionsService: UserPermissionsService, whiteLabelingService: WhiteLabelingService, uiSettingsService: UiSettingsService, dialog: MatDialog, fb: UntypedFormBuilder, window: Window);
    ngOnInit(): void;
    ngOnDestroy(): void;
    private loadWhiteLabelingParams;
    buildWhiteLabelingSettingsForm(): void;
    private updateValidators;
    editCustomCss(): void;
    preview(): void;
    save(): void;
    confirmForm(): UntypedFormGroup;
    onExit(): Observable<any>;
    static ɵfac: i0.ɵɵFactoryDeclaration<WhiteLabelingComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<WhiteLabelingComponent, "tb-white-labeling", never, {}, {}, never, never, false, never>;
}
