import { ChangeDetectorRef } from '@angular/core';
import { Store } from '@ngrx/store';
import { AppState } from '@core/core.state';
import { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';
import { UserInfo } from '@shared/models/user.model';
import { Authority } from '@shared/models/authority.enum';
import { EntityTableConfig } from '@home/models/entity/entities-table-config.models';
import { TranslateService } from '@ngx-translate/core';
import { GroupEntityComponent } from '@home/components/group/group-entity.component';
import { GroupEntityTableConfig } from '@home/models/group/group-entities-table-config.models';
import { UserPermissionsService } from '@core/http/user-permissions.service';
import * as i0 from "@angular/core";
export declare class UserComponent extends GroupEntityComponent<UserInfo> {
    protected store: Store<AppState>;
    protected entityValue: UserInfo;
    protected entitiesTableConfigValue: EntityTableConfig<UserInfo> | GroupEntityTableConfig<UserInfo>;
    protected fb: UntypedFormBuilder;
    protected cd: ChangeDetectorRef;
    protected translate: TranslateService;
    protected userPermissionsService: UserPermissionsService;
    authority: typeof Authority;
    loginAsUserEnabled$: import("rxjs").Observable<boolean>;
    whiteLabelingAllowed$: import("rxjs").Observable<boolean>;
    isSysAdmin$: import("rxjs").Observable<boolean>;
    private authUser;
    constructor(store: Store<AppState>, entityValue: UserInfo, entitiesTableConfigValue: EntityTableConfig<UserInfo> | GroupEntityTableConfig<UserInfo>, fb: UntypedFormBuilder, cd: ChangeDetectorRef, translate: TranslateService, userPermissionsService: UserPermissionsService);
    hideDelete(): boolean;
    isCurrentUser(): boolean;
    isUserCredentialsEnabled(): boolean;
    isUserCredentialPresent(): boolean;
    buildForm(entity: UserInfo): UntypedFormGroup;
    updateForm(entity: UserInfo): void;
    onUserIdCopied($event: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<UserComponent, [null, { optional: true; }, { optional: true; }, null, null, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<UserComponent, "tb-user", never, {}, {}, never, never, false, never>;
}
