import { ChangeDetectorRef, DestroyRef } from '@angular/core';
import { Store } from '@ngrx/store';
import { AppState } from '@core/core.state';
import { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';
import { DeviceInfo } from '@shared/models/device.models';
import { DeviceCredentials, DeviceProfileInfo } from '@shared/models/device.models';
import { EntityType } from '@shared/models/entity-type.models';
import { TranslateService } from '@ngx-translate/core';
import { DeviceService } from '@core/http/device.service';
import { ClipboardService } from 'ngx-clipboard';
import { GroupEntityTableConfig } from '@home/models/group/group-entities-table-config.models';
import { GroupEntityComponent } from '@home/components/group/group-entity.component';
import { Subject } from 'rxjs';
import { OtaUpdateType } from '@shared/models/ota-package.models';
import { EntityTableConfig } from '@home/models/entity/entities-table-config.models';
import { UserPermissionsService } from '@core/http/user-permissions.service';
import { WhiteLabelingService } from '@core/http/white-labeling.service';
import * as i0 from "@angular/core";
export declare class DeviceComponent extends GroupEntityComponent<DeviceInfo> {
    protected store: Store<AppState>;
    protected translate: TranslateService;
    private deviceService;
    private clipboardService;
    protected entityValue: DeviceInfo;
    protected entitiesTableConfigValue: EntityTableConfig<DeviceInfo> | GroupEntityTableConfig<DeviceInfo>;
    protected fb: UntypedFormBuilder;
    protected cd: ChangeDetectorRef;
    protected userPermissionsService: UserPermissionsService;
    private destroyRef;
    private wl;
    entityType: typeof EntityType;
    deviceCredentials$: Subject<DeviceCredentials>;
    otaUpdateType: typeof OtaUpdateType;
    constructor(store: Store<AppState>, translate: TranslateService, deviceService: DeviceService, clipboardService: ClipboardService, entityValue: DeviceInfo, entitiesTableConfigValue: EntityTableConfig<DeviceInfo> | GroupEntityTableConfig<DeviceInfo>, fb: UntypedFormBuilder, cd: ChangeDetectorRef, userPermissionsService: UserPermissionsService, destroyRef: DestroyRef, wl: WhiteLabelingService);
    ngOnInit(): void;
    hideDelete(): boolean;
    showConnectivityDialog(): boolean;
    hideManageCredentials(): boolean;
    buildForm(entity: DeviceInfo): UntypedFormGroup;
    updateForm(entity: DeviceInfo): void;
    onDeviceIdCopied($event: any): void;
    onDeviceProfileUpdated(): void;
    onDeviceProfileChanged(deviceProfile: DeviceProfileInfo): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DeviceComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DeviceComponent, "tb-device", never, {}, {}, never, never, false, never>;
}
