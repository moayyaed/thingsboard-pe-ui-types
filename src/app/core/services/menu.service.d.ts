import { Store } from '@ngrx/store';
import { AppState } from '../core.state';
import { HomeSection, MenuSection } from '@core/services/menu.models';
import { Observable } from 'rxjs';
import { CustomMenuService } from '@core/http/custom-menu.service';
import { Router } from '@angular/router';
import { UserPermissionsService } from '@core/http/user-permissions.service';
import * as i0 from "@angular/core";
export declare class MenuService {
    private store;
    private router;
    private customMenuService;
    private userPermissionsService;
    private currentMenuSections;
    private menuSections$;
    private homeSections$;
    private availableMenuSections$;
    private availableMenuLinks$;
    private currentCustomSection;
    private currentCustomChildSection;
    constructor(store: Store<AppState>, router: Router, customMenuService: CustomMenuService, userPermissionsService: UserPermissionsService);
    private buildMenu;
    private updateOpenedMenuSections;
    private allMenuLinks;
    private allMenuSections;
    menuSections(): Observable<Array<MenuSection>>;
    homeSections(): Observable<Array<HomeSection>>;
    getCurrentCustomSection(): MenuSection;
    getCurrentCustomChildSection(): MenuSection;
    private updateCurrentCustomSection;
    private detectCurrentCustomSection;
    private detectCurrentCustomChildSection;
    private extractQueryParams;
    getRedirectPath(parentPath: string, redirectPath: string): Observable<string>;
    private findSectionByPath;
    availableMenuLinks(): Observable<Array<MenuSection>>;
    availableMenuSections(): Observable<Array<MenuSection>>;
    menuLinkById(id: string): Observable<MenuSection | undefined>;
    menuLinksByIds(ids: string[]): Observable<Array<MenuSection>>;
    static ɵfac: i0.ɵɵFactoryDeclaration<MenuService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<MenuService>;
}
